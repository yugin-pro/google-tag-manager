/*
Using Intersection Observer API for e-commerce tracking via GTM
https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API
*/

let listInfo = getListInformation()
const intersectionCallback = (entries) => {
  entries.forEach((entry) => {
    if (entry.isIntersecting) {
      if (entry.intersectionRatio >= 0.75) {
        dataLayer.push({ ecommerce: null });  
        dataLayer.push({
          event: "view_item_list",
          ecommerce: {
            item_list_id: listInfo.item_list_id,
            item_list_name: listInfo.item_list_name,
            items: [
             {
              item_id: getProductInfo(entry.target).item_id,
              item_name: getProductInfo(entry.target).item_name,
              affiliation: getProductInfo(entry.target).affiliation,
              coupon: getProductInfo(entry.target).coupon,
              discount: getProductInfo(entry.target).discount,
              index: getProductInfo(entry.target).index,
              item_brand: getProductInfo(entry.target).item_brand,
              item_category: listInfo.item_category,
              item_category2: listInfo.item_category2,
              item_category3: listInfo.item_category3,
              item_category4: listInfo.item_category4,
              item_category5: listInfo.item_category5,
              item_list_id: listInfo.item_list_id,
              item_list_name: listInfo.item_list_name,
              item_variant: getProductInfo(entry.target).item_variant,
              location_id: "ChIJIQBpAG2ahYAR_6128GcTUEo",
              price: getProductInfo(entry.target).price,
              quantity: getProductInfo(entry.target).quantity         
            }]
          }
        });
        productObserver.unobserve(entry.target)
      }
    }
  });
};


const productObserver  =  new IntersectionObserver(intersectionCallback,{
  root: null,
  rootMargin: "50px",
  threshold: 1,
});

let cardCollection = document.getElementsByClassName('card shadow-sm')
for (let item of cardCollection) {
    productObserver.observe(item)
  	item.addEventListener("click", productCardClick)
}

function getListInformation() {
	return {
    	item_list_id: 1,
      	item_list_name: 'default list',
       item_category: "category"+ Math.floor(Math.random() * 5 + 1),
  item_category2: "category2_"+ Math.floor(Math.random() * 5 + 1),
  item_category3: "category3_"+ Math.floor(Math.random() * 5 + 1),
  item_category4: "category4_"+ Math.floor(Math.random() * 5 + 1),
  item_category5: "category5_"+ Math.floor(Math.random() * 5 + 1),
    }
}

function getProductInfo(target) {
    let itemValue = target.getElementsByClassName('card-text')[0].getInnerHTML()
          
	return {
        item_id: "SKU_" + itemValue.length,
        item_name: itemValue,
        affiliation: "Google Merchandise Store",
        coupon: "SUMMER_FUN",
        discount: Math.floor(Math.random() * 5 + 1),
        index: Math.floor(Math.random() * 5 + 1),
        item_brand: 'Any Brand',
        item_variant: 'Any variant',
        location_id: "ChIJIQBpAG2ahYAR_6128GcTUEo",
        price:  itemValue.length,
        quantity: Math.floor(Math.random() * 5 + 1)   
    }
}

function productCardClick(e) {
	if(e.target.innerHTML == 'Preview') {
        dataLayer.push({ ecommerce: null });  
        dataLayer.push({
          event: "view_item",
          ecommerce: {
            currency: 'EUR',
            value: 1,
            items: [
             {
              item_id: getProductInfo(e.currentTarget).item_id,
              item_name: getProductInfo(e.currentTarget).item_name,
              affiliation: getProductInfo(e.currentTarget).affiliation,
              coupon: getProductInfo(e.currentTarget).coupon,
              discount: getProductInfo(e.currentTarget).discount,
              index: getProductInfo(e.currentTarget).index,
              item_brand: getProductInfo(e.currentTarget).item_brand,
              item_category: listInfo.item_category,
              item_category2: listInfo.item_category2,
              item_category3: listInfo.item_category3,
              item_category4: listInfo.item_category4,
              item_category5: listInfo.item_category5,
              item_list_id: listInfo.item_list_id,
              item_list_name: listInfo.item_list_name,
              item_variant: getProductInfo(e.currentTarget).item_variant,
              location_id: "ChIJIQBpAG2ahYAR_6128GcTUEo",
              price: getProductInfo(e.currentTarget).price,
              quantity: getProductInfo(e.currentTarget).quantity         
            }]
          }
        });
    }
  	if(e.target.innerHTML == 'Use') {
        dataLayer.push({ ecommerce: null });  
        dataLayer.push({
          event: "select_item",
          ecommerce: {
            item_list_id: listInfo.item_list_id,
            item_list_name: listInfo.item_list_name,
            items: [
             {
              item_id: getProductInfo(e.currentTarget).item_id,
              item_name: getProductInfo(e.currentTarget).item_name,
              affiliation: getProductInfo(e.currentTarget).affiliation,
              coupon: getProductInfo(e.currentTarget).coupon,
              discount: getProductInfo(e.currentTarget).discount,
              index: getProductInfo(e.currentTarget).index,
              item_brand: getProductInfo(e.currentTarget).item_brand,
              item_category: listInfo.item_category,
              item_category2: listInfo.item_category2,
              item_category3: listInfo.item_category3,
              item_category4: listInfo.item_category4,
              item_category5: listInfo.item_category5,
              item_list_id: listInfo.item_list_id,
              item_list_name: listInfo.item_list_name,
              item_variant: getProductInfo(e.currentTarget).item_variant,
              location_id: "ChIJIQBpAG2ahYAR_6128GcTUEo",
              price: getProductInfo(e.currentTarget).price,
              quantity: getProductInfo(e.currentTarget).quantity         
            }]
          }
        });
    }

}
}
let cardCollection = document.getElementsByClassName('card shadow-sm')
for (let item of cardCollection) {
    productObserver.observe(item)
}
